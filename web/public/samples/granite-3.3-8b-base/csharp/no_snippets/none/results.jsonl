{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/179", "postprocessed": "TokenType> TokenTypes = new ReadOnlyCollection<TokenType>(new List<TokenType>\n        {\n            TSLangTokenTypes.comment,\n            TSLangTokenTypes.whitespace,\n            TSLangTokenTypes.leftCurlyBrace,\n            TSLangTokenTypes.rightCurlyBrace,\n            TSLangTokenTypes.leftSquareBracket,\n            TSLangTokenTypes.rightSquareBracket,\n            TSLangTokenTypes.leftAngleBracket,\n            TSLangTokenTypes.rightAngleBracket,\n            TSLangTokenTypes.leftParen,\n            TSLangTokenTypes.rightParen,\n            TSLang", "exactMatch": false, "editSimilarity": 19.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/122", "postprocessed": "nameof(GetRandomNumber)))\n        [InlineData(1)]\n        [InlineData(2)]\n        [InlineData(3)]\n        [InlineData(4)]\n        [InlineData(5)]\n        [InlineData(6)]\n        [InlineData(7)]\n        [InlineData(8)]\n        [InlineData(9)]\n        [InlineData(10)]\n        public void RetrieveStatusDetailByCode_Throws_StatusDetailDependencyException_When_StorageBroker_Throws_Exception(int someCode)\n        {\n            \n            int someCode = GetRandomNumber();\n\n            var dependancyException = new Exception();\n\n            var failedStorageException =\n                new Failed", "exactMatch": false, "editSimilarity": 27.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/146", "postprocessed": "ref bool ___inAction2)\n        {\n            if (!__instance.altVersion)\n                return true;\n\n            ___inAction = false;\n            GameObject gameObject = GameObject.Instantiate<GameObject>(__instance.insignia, MonoSingleton<PlayerTracker>.Instance.GetPlayer().position, Quaternion.identity);\n            Vector3 playerVelocity = MonoSingleton<PlayerTracker>.Instance.GetPlayerVelocity();\n            playerVelocity.y = 0f;\n            if (playerVelocity.magnitude > 0f)\n            {\n                gameObject.transform.LookAt(MonoSingleton<PlayerTracker>.Instance.GetPlayer().position + player", "exactMatch": false, "editSimilarity": 17.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/134", "postprocessed": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Net;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Web;\nusing System.Web.Script.Serialization;\nusing System.Web.Services;\nusing System.Xml;\nusing System.Xml.Linq;\nusing System.Xml.XPath;\nusing Common;\nusing Common.Helper;\nusing Common.Model;\nusing Common.Model.WeChat;\nusing Common.Model.WeChat.Applets;\nusing Common.Model.WeChat", "exactMatch": false, "editSimilarity": 11.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/450", "postprocessed": "StatusDetail statusDetail)\n        {\n            if (statusDetail is null)\n            {\n                throw new ArgumentNullException(nameof(statusDetail));\n            }\n\n            if (statusDetail.StatusCode is null)\n            {\n                throw new ArgumentNullException(nameof(statusDetail.StatusCode));\n            }\n\n            if (statusDetail.StatusDetail is null)\n            {\n                throw new ArgumentNullException(nameof(statusDetail.StatusDetail));\n            }\n        }\n\n        private static void ValidateStorageStatusCode(StatusCode statusCode)\n        {\n            if (statusCode is null)\n            {\n                throw new ArgumentNullException(nameof(statusCode));\n            }\n\n            if (statusCode.Code is null)\n           ", "exactMatch": false, "editSimilarity": 13.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/514", "postprocessed": "int _totalPackageNumber;\n        private int _currentPackageProgress;\n        private int _totalPackageProgress;\n        private OperationState _status;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool _cancellationRequested;\n        private bool", "exactMatch": false, "editSimilarity": 5.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/528", "postprocessed": "DataList<T> list, DataList<T> collection)\n        {", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/532", "postprocessed": "IStateStore<TContext>.Get<TState>()\n        {\n            return states.Find(state => state is TState);\n        }\n    }\n}\n", "exactMatch": false, "editSimilarity": 57.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/707", "postprocessed": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.Runtime.CompilerServices;\nusing System.Runtime.InteropServices;\nusing HarmonyLib;\nusing UnityEngine;\n\nnamespace Ultrapain.Patches\n{\n    [HarmonyPatch(typeof(MinosPrime), \"Update\")]\n    public class MinosPrime\n    {\n        [HarmonyPostfix]\n        public static void Postfix(MinosPrime __instance)\n        {\n            if (!___vibrating)\n                return;\n\n            if (", "exactMatch": false, "editSimilarity": 13.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1144", "postprocessed": "List<NodeQuest> nodeObjectives;\n        public List<int> state;\n        public int limitDay;\n        public int startDay;\n        public string misionName;\n        public bool isMain;\n\n        [Header(\"Graph Part\")]\n        public List<NodeLinksGraph> nodeLinkData;\n\n        [System.Serializable]\n        public class NodeLinksGraph\n        {\n            public string baseNodeGUID;\n            public string portName;\n            public string targetNodeGUID;\n        }\n\n        public void Reset()\n        {\n            state = new List<int>();\n            nodeActual = null;\n\n            NodeQuest[] getNodes = Resources.Load", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1113", "postprocessed": "ref PhysicalShockwave ___m_ShockwavePrefab)\n        {\n            \n            ___m_ShockwavePrefab.enabled = true;\n            ___m_ShockwavePrefab.size = 100f;\n            ___m_ShockwavePrefab.speed = ConfigManager.sisyInstJumpShockwaveSpeed.value;\n            ___m_ShockwavePrefab.damage = ConfigManager.sisyInstJumpShockwaveDamage.value;\n            ___m_ShockwavePrefab.enemy = true;", "exactMatch": false, "editSimilarity": 22.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1160", "postprocessed": "OnPrimaryChange(Color color)\n        {\n            color_current = color;\n            history_colors.Add(color);\n        }\n        private void OnGUI()\n        {\n            if (history_colors.Count > 0)\n            {\n                GUI.color = color_current;\n                GUI.Label(new Rect(10, 10, 100, 20), \"Current Color: \" + color_current.ToString());\n                GUI.color = color_1;\n                GUI.Label(new Rect(10, 40, 100, 20), \"", "exactMatch": false, "editSimilarity": 8.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1225", "postprocessed": "ThrownSword __instance, Collider __0)\n        {\n            if (__0.gameObject.tag == \"Player\")\n            {\n                GameObject explosionObj = GameObject.Instantiate(Plugin.shotgunGrenade.gameObject.GetComponent<Grenade>().explosion, __0.gameObject.transform.position, __0.gameObject.transform.rotation);\n                foreach (Explosion explosion in explosionObj.GetComponentsInChildren<Explosion>())\n                {\n                    explosion.enemy = true;\n                }\n            }\n        }\n    }\n\n    class ThrownSword_OnTriggerStay_Patch\n    {", "exactMatch": false, "editSimilarity": 15.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1353", "postprocessed": "ref bool ___exploded2,\n            ref bool ___exploded3, ref bool ___exploded4, ref bool ___exploded5, ref bool ___exploded6,\n            ref bool ___exploded7, ref bool ___exploded8, ref bool ___exploded9, ref bool ___exploded10,\n            ref bool ___exploded11, ref bool ___exploded12, ref bool ___exploded13, ref bool ___exploded14,\n            ref bool ___exploded15, ref bool ___exploded16, ref bool ___exploded17, ref bool ___explo", "exactMatch": false, "editSimilarity": 7.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2112", "postprocessed": "[NotNull]\n        public NameProxy NameProxy {", "exactMatch": false, "editSimilarity": 62.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2495", "postprocessed": "TKey, out TReturn, in TStorage> : IStore<TKey, TStorage>\n    {", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2799", "postprocessed": "DataTableExtractorConfiguration _configuration;\n        private DataTableExtractorWorkbookConfiguration _workbookConfiguration;\n        private DataTableExtractorWorksheetConfiguration _worksheetConfiguration;\n        private DataTableExtractorSearchConfiguration _searchConfiguration;\n\n        public DataTableExtractorConfiguration Configuration\n        {\n            get\n            {\n                if (_configuration is null)\n                {\n                    _configuration = new DataTableExtractorConfiguration();\n                }\n\n                return _configuration;\n            }\n        }\n\n        public DataTableExtractorWorkbookConfiguration Workbook(string workbook)\n        {\n            if (string.IsNullOrEmpty(workbook))\n            {\n                throw new ArgumentException($\"{nameof(workbook)} cannot be null or empty.\");\n            }\n\n            ", "exactMatch": false, "editSimilarity": 3.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2877", "postprocessed": "NodeQuestGraph node, Button button)\n        {\n            var b = button.GetComponent<Button>();", "exactMatch": false, "editSimilarity": 59.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2949", "postprocessed": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing BenchmarkDotNet.Attributes;\nusing BenchmarkDotNet.Running;\nusing BenchmarkDotNet.Exporters;\nusing BenchmarkDotNet.Exporters.Csv;\nusing BenchmarkDotNet.Exporters.Json;\nusing BenchmarkDotNet.Exporters.Markdown;\nusing BenchmarkDotNet.Exporters.MemoryDiagnoser;\nusing BenchmarkDotNet.Exporters.SystemTextJson;\nusing BenchmarkDotNet.Exporters.Markdown.MarkdownExporter;\nusing BenchmarkDotNet.Exporters", "exactMatch": false, "editSimilarity": 3.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3030", "postprocessed": "GameCacheEntry GetGameCacheEntry(string id)\n        {", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3297", "postprocessed": "List<Module> Modules { get; private set; }\n\n        public List<Thread> Threads { get; private set; }\n\n        public Version Version { get; private set; }\n\n        \n\n        \n\n        public void Connect(string host, int port = 731)\n        {\n            _cache.Clear();\n            ConnectionInfo = Session.Connect(host, port);\n\n            \n            Memory = new XboxMemoryStream(this);\n            Kernel = new Kernel(this);\n            StaticScratch = new ScratchBuffer(this);\n\n            Log.Information(\"Loaded Modules:\");\n            foreach (var", "exactMatch": false, "editSimilarity": 5.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3390", "postprocessed": "ArchiveFileAttributes> GetArchiveFiles(string archiveFolder)\n        {\n            ObservableCollection<Models.ArchiveFileAttributes> archiveFiles = new ObservableCollection<Models.ArchiveFileAttributes>();\n\n            if (String.IsNullOrWhiteSpace(archiveFolder) == false && Directory.Exists(archiveFolder) == true)\n            {\n                var directory = new DirectoryInfo(archiveFolder);\n                foreach (FileInfo fileInfo in directory.GetFiles().OrderByDescending(p => p.CreationTime))\n                {\n                    archiveFiles.Add(new Models.ArchiveFileAttributes(fileInfo.Name, fileInfo.DirectoryName, fileInfo.LastWriteTime, fileInfo.Length", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3794", "postprocessed": "Task<SKContext> InvokePipedFunctions(this IKernel kernel, SKContext context, params ISKFunction[] functions) =>\n            await kernel.RunAsync(context, functions);\n\n        public static Task<SKContext> InvokePipedFunctions(this IKernel kernel, SKContext context, IEnumerable<ISKFunction> functions) =>\n            await kernel.RunAsync(context, functions.ToArray());\n\n        public static Task<SKContext> InvokePipedFunctions(this IKernel kernel, SKContext context, params string[] functions) =>\n            await kernel.RunAsync(context, functions.Select(f => kernel.Skills", "exactMatch": false, "editSimilarity": 16.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3791", "postprocessed": "static QuestLog misionLog;\n\n        public static QuestLogSaveData data;\n\n        private static QuestManager instance;\n\n        public static QuestManager GetInstance()\n        {\n            if (instance == null) instance = new QuestManager();\n            return instance;\n        }\n\n        private QuestManager()\n        {\n            misionLog = Resources.Load<QuestLog>(QuestConstants.QUEST_LOG_NAME);\n\n            if (misionLog == null)\n            {\n                \n                misionLog = ScriptableObject.CreateInstance<QuestLog>();\n\n                AssetDatabase.CreateAsset(misionLog, QuestConstants.RESOURCES_", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3769", "postprocessed": "bool alreadyHitPlayer = false;\n        public bool alreadyReflected = false;\n\n        private void Awake()\n        {\n            proj = GetComponent<Projectile>();\n            proj.speed = 0;\n            GetComponent<Rigidbody>().isKinematic = true;\n        }\n\n        private void Update()\n        {\n            if (!hasTargetPoint)\n                transform.position += transform.forward * speed;\n            else\n            {\n                if (transform.position!= targetPoint)\n                {\n                    transform.position = Vector3.MoveTowards(transform.position, targetPoint, Time.deltaTime * speed);\n                    if (transform.position == targetPoint", "exactMatch": false, "editSimilarity": 4.0, "stop": false}
