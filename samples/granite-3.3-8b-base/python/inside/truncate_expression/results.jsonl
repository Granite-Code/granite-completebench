{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/405", "postprocessed": "setEndValue(target)", "exactMatch": false, "editSimilarity": 84.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/397", "postprocessed": "fuse(self.graph, v, w)", "exactMatch": false, "editSimilarity": 44.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/517", "postprocessed": "is_tensor(self.lora_A[self.active_adapter]):", "exactMatch": false, "editSimilarity": 27.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/466", "postprocessed": "finalize(\n            threshold=threshold, nwords=nwords, padding_factor=padding_factor\n        )", "exactMatch": false, "editSimilarity": 87.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/1323", "postprocessed": "get_public_id(file.file)", "exactMatch": false, "editSimilarity": 25.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/1437", "postprocessed": "get_messages(conversation_id=\"1\", topk=1)", "exactMatch": false, "editSimilarity": 81.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/1709", "postprocessed": "add_constraint(sum_lt_val, ('listvar',))", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/1590", "postprocessed": "metric_name}: {results}\"\n    def _evaluate_one_query(self, pred_info, gt_info):\n        \n        tp = 0\n\n        \n        iou = get_batch_aabb_pair_ious(\n            torch.from_numpy(pred_info[\"aabb_bound\"]), torch.from_numpy(gt_info[\"aabb_bound\"])\n        )[0].item()\n        if iou >= IOU_THRESHOLD:\n            tp += 1\n        return tp\n", "exactMatch": false, "editSimilarity": 12.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/2227", "postprocessed": "resample(dist_vis, d, w.T, use_avg=True).T)", "exactMatch": false, "editSimilarity": 98.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/3111", "postprocessed": "slerp(nxt_phase, pred_phase)", "exactMatch": false, "editSimilarity": 58.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/3433", "postprocessed": "to_value() == {}", "exactMatch": false, "editSimilarity": 55.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/3517", "postprocessed": "merge(conf)", "exactMatch": false, "editSimilarity": 92.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/3599", "postprocessed": "_rm_dir(self.hdfs_temporary_dir, self.client)", "exactMatch": false, "editSimilarity": 66.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/3778", "postprocessed": "fp8_to_half(graph, x, scale, weight, axis=0)", "exactMatch": false, "editSimilarity": 59.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/4336", "postprocessed": "undo(m)", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/6452", "postprocessed": "inverse() * p_t)) - p_c", "exactMatch": false, "editSimilarity": 74.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/6467", "postprocessed": "removeChildrenFrom(name, \"Integer\")", "exactMatch": false, "editSimilarity": 46.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/8317", "postprocessed": "file_exists() is True", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/8250", "postprocessed": "config_formats())", "exactMatch": false, "editSimilarity": 63.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/8634", "postprocessed": "owner.id == current_user.id).to_dict()", "exactMatch": false, "editSimilarity": 62.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/7569", "postprocessed": "if __name__ == '__main__':\n    util.timer_start()\n    parser = argparse.ArgumentParser(description='Generate graph from graph description.')\n    parser.add_argument('--outfile', required=True, type=str, help='Output file.')\n    parser.add_argument('--gdescfile', required=True, type=str, help='Input graph description file.')\n    parser.add_argument('--gtype', required=True, type=str, help='Graph type.')\n    args = parser.parse_args()\n", "exactMatch": false, "editSimilarity": 1.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/9053", "postprocessed": "state_save(\"qrcodes\", state)", "exactMatch": false, "editSimilarity": 20.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/9184", "postprocessed": "set_r_load(\"V_CTRL\", 100e3)", "exactMatch": false, "editSimilarity": 94.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/9738", "postprocessed": "lambdas_)", "exactMatch": false, "editSimilarity": 72.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "python", "template": "inside", "postprocess": "truncate_expression", "task_id": "project_cc_python/9828", "postprocessed": "TensorContext(rp.DPReal)", "exactMatch": false, "editSimilarity": 51.0, "stop": true}
