{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/179", "postprocessed": "TokenType> TokenTypes = new List<TokenType>\n\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 86.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/122", "postprocessed": "DependencyExceptions))]\n        public void ShouldThrowDependencyExceptionOnRetrieveByIdWhenExceptionOccurs(\n            Exception dependancyException)\n        {\n            \n            int randomNumber = GetRandomNumber();\n            int randomId = randomNumber;\n\n            var failedStorageException =\n                new FailedStatusDetailStorageException(dependancyException);\n\n            var expectedStatusDetailDependencyException =\n                new StatusDetailDependencyException(failedStorageException);\n\n            this.storageBrokerMock.Setup(broker =>\n                broker.SelectById(randomId))\n                    .Throws(dependancyException);\n\n            \n            Action retrieveStatusDetailByIdAction = () =>\n                this.statusDetail", "exactMatch": false, "editSimilarity": 32.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/146", "postprocessed": "ref float ___fleshDroneCooldown, EnemyIdentifier ___eid, Statue ___stat, float ___maxHealth)\n        {\n            if (__instance.altVersion)\n                return true;\n\n            ___inAction = false;\n            GameObject gameObject = GameObject.Instantiate<GameObject>(__instance.insignia, MonoSingleton<PlayerTracker>.Instance.GetPlayer().position, Quaternion.identity);\n            Vector3 playerVelocity = MonoSingleton<PlayerTracker>.Instance.GetPlayerVelocity();\n            playerVelocity.y = 0f;\n            if (playerVelocity.magnitude > 0f)\n            {\n                gameObject.transform.", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/134", "postprocessed": "\n\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 0.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/450", "postprocessed": "StatusDetail statusDetail)\n        {\n            if (statusDetail is null)\n            {\n                throw new ArgumentNullException(nameof(statusDetail));\n            }\n\n            if (statusDetail.Code == 0)\n            {\n                throw new InvalidStatusDetailException(statusDetail.Code);\n            }\n        }\n\n        private static void ValidateStatusCode(int statusCode)\n        {\n            if (statusCode == 0)\n            {\n                throw new InvalidStatusCodeException(statusCode);\n            }\n        }\n    }\n}\n", "exactMatch": false, "editSimilarity": 18.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/514", "postprocessed": "int _totalPackageNumber;\n        private readonly IReadOnlyCollection<Package> _packages;\n        private readonly PackageManager _manager;\n        private readonly CancellationTokenSource _cancellation;\n        private readonly ObservableAsPropertyHelper<ISolidColorBrush> _progressColor;", "exactMatch": false, "editSimilarity": 13.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/528", "postprocessed": "DataList<T> list, DataList<T> collection)\n        {", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/532", "postprocessed": "IStateStore<TContext>.InitialState => initialState;\n\n        public IStackState<TContext> Get<TState>()\n        {\n            foreach (var state in states)\n            {\n                if (state is TState target)\n                {\n                    return target;\n                }\n            }\n\n            throw new ArgumentException($\"Not found state: {typeof(TState)}\");\n        }\n\n        public void Dispose()\n        {\n            foreach (var state in states)\n            {\n                state.Dispose();\n            }\n        }\n    }\n}\n\n\n\n\nusing System;\nusing System.Collections.Generic;\n\n", "exactMatch": false, "editSimilarity": 15.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/707", "postprocessed": "             \n\n\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 0.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1144", "postprocessed": "string misionName;\n        public bool isMain;\n\n        [Header(\"Graph Part\")]\n        public List<NodeLinksGraph> nodeLinkData;\n\n        [System.Serializable]\n        public class NodeLinksGraph\n        {\n            public string baseNodeGUID;\n            public string portName;\n            public string targetNodeGUID;\n        }\n\n        public void Reset()\n        {\n            state = new List<int>();\n            nodeActual = null;\n\n            NodeQuest[] getNodes = Resources.LoadAll<NodeQuest>($\"{QuestConstants.MISIONS_NAME}/{ this.misionName}/Nodes\");\n\n            foreach (NodeQuest n in get", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1113", "postprocessed": "Sisyphus __instance, ref PhysicalShockwave ___m_ShockwavePrefab)\n        {", "exactMatch": false, "editSimilarity": 84.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1160", "postprocessed": "OnEnable()\n        {\n            K_Primary.Subscribe(OnPrimaryChange);\n        }\n        private void OnDisable() => K_Primary.Unsubscribe(OnPrimaryChange);\n        private void OnGUI()\n        {\n            if(history_colors.Count > 0)\n            {\n                GUILayout.BeginHorizontal();\n                GUILayout.Label(\"History Colors\");\n                GUILayout.EndHorizontal();\n                for(int i = 0; i < history_colors.Count; i++)\n                {\n                    GUILayout.BeginHorizontal();\n                    GUILayout.Label(history_colors[i].ToString());\n                    if(GUILayout.Button(\"Remove\"))\n                   ", "exactMatch": false, "editSimilarity": 11.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1225", "postprocessed": "ThrownSword __instance, Collider __0)\n        {\n            if (__0.gameObject.tag == \"Player\")\n            {\n                GameObject explosionObj = GameObject.Instantiate(Plugin.shotgunGrenade.gameObject.GetComponent<Grenade>().explosion, __0.gameObject.transform.position, __0.gameObject.transform.rotation);\n                foreach (Explosion explosion in explosionObj.GetComponentsInChildren<Explosion>())\n                {\n                    explosion.enemy = true;\n                }\n            }\n        }\n    }\n\n    class ThrownSword_OnTriggerStay_Patch\n    {", "exactMatch": false, "editSimilarity": 15.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1353", "postprocessed": "ref bool ___exploded2,\n            ref bool ___exploded3, ref bool ___exploded4, ref bool ___exploded5, ref bool ___exploded6,\n            ref bool ___exploded7, ref bool ___exploded8, ref bool ___exploded9, ref bool ___exploded10,\n            ref bool ___exploded11, ref bool ___exploded12, ref bool ___exploded13, ref bool ___exploded14,\n            ref bool ___exploded15, ref bool ___exploded16, ref bool ___exploded17, ref bool ___explo", "exactMatch": false, "editSimilarity": 7.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2112", "postprocessed": "[NotNull]\n        public NameProxy NameProxy {", "exactMatch": false, "editSimilarity": 62.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2495", "postprocessed": "TKey, out TReturn, in TStorage> : IStore<TKey, TStorage>\n    {", "exactMatch": true, "editSimilarity": 100.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2799", "postprocessed": "readonly List<int> _worksheetsIndexes = new List<int>();\n        private readonly List<string> _worksheetsNames = new List<string>();\n\n        private readonly List<int> _worksheetsIndexes = new List<int>();\n        private readonly List<string> _worksheetsNames = new List<string>();\n\n        private readonly List<int> _worksheetsIndexes = new List<int>();\n        private readonly List<string> _worksheetsNames = new List<string>();\n\n        private readonly List<int> _worksheetsIndexes = new List<int>();\n        private readonly List<string> _worksheetsNames", "exactMatch": false, "editSimilarity": 2.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2877", "postprocessed": "NodeQuestGraph node, Button button)\n        {\n            var b = button.GetComponent<Button>();", "exactMatch": false, "editSimilarity": 59.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2949", "postprocessed": "\n\n\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 0.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3030", "postprocessed": "GameCacheEntry FindGameCache(string cacheId)\n        {\n            if (cacheEntries.ContainsKey(cacheId))", "exactMatch": false, "editSimilarity": 56.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3297", "postprocessed": "bool HasFastGetmem { get; private set; }\n\n        public bool HasFastGetmem2 { get; private set; }\n\n        public bool HasFastGetmem3 { get; private set; }\n\n        public bool HasFastGetmem4 { get; private set; }\n\n        public bool HasFastGetmem5 { get; private set; }\n\n        public bool HasFastGetmem6 { get; private set; }\n\n        public bool HasFastGetmem7 { get; private set; }\n\n        public bool HasFastGetmem8 { get; private set; }\n\n        public bool HasFastGetmem9 { get;", "exactMatch": false, "editSimilarity": 2.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3390", "postprocessed": "ArchiveFileAttributes> GetArchiveFiles(string archiveFolder)\n        {\n            ObservableCollection<Models.ArchiveFileAttributes> archiveFiles = new ObservableCollection<Models.ArchiveFileAttributes>();\n\n            if (String.IsNullOrWhiteSpace(archiveFolder) == false && Directory.Exists(archiveFolder) == true)\n            {\n                var directory = new DirectoryInfo(archiveFolder);\n                foreach (FileInfo fileInfo in directory.GetFiles().OrderByDescending(p => p.CreationTime))\n                {\n                    archiveFiles.Add(new Models.ArchiveFileAttributes(fileInfo.Name, fileInfo.DirectoryName, fileInfo.LastWriteTime, fileInfo.Length", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3794", "postprocessed": "Task<SKContext> InvokePipedFunctions(this IKernel kernel, SKContext context, params ISKFunction[] functions) =>\n            await kernel.RunAsync(context, functions);\n\n        public static async Task<SKContext> InvokePipedFunctions(this IKernel kernel, SKContext context,\n            IEnumerable<ISKFunction> functions) =>\n            await kernel.RunAsync(context, functions.ToArray());\n\n        public static async Task<SKContext> InvokePipedFunctions(this IKernel kernel, SKContext context,\n            IEnumerable<SKFunction> functions) =>\n            await kernel.RunAsync(context, functions.Select", "exactMatch": false, "editSimilarity": 15.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3791", "postprocessed": "static QuestLogSaveData data;\n\n        private static QuestManager instance;\n\n        public static QuestManager GetInstance()\n        {\n            if (instance == null) instance = new QuestManager();\n            return instance;\n        }\n\n        private QuestManager()\n        {\n            misionLog = Resources.Load<QuestLog>(QuestConstants.QUEST_LOG_NAME);\n\n            if (misionLog == null)\n            {\n                \n                misionLog = ScriptableObject.CreateInstance<QuestLog>();\n\n                AssetDatabase.CreateAsset(misionLog, QuestConstants.RESOURCES_PATH + \"/\" + QuestConstants.QUEST_", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-base", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3769", "postprocessed": "float damage = 10f;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTargetPoint = false;\n        public Vector3 targetPoint;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTarget = false;\n        public Transform target;\n        public bool hasTarget = false;\n        public Transform target;", "exactMatch": false, "editSimilarity": 5.0, "stop": false}
