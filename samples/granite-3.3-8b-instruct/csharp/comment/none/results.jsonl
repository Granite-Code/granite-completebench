{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/179", "postprocessed": "TokenType> TokenTypes = new ReadOnlyCollection<TokenType>(new[]\n{\n            TSLangTokenTypes.identifier,\n            TSLangTokenTypes.literal_integer,\n            TSLangTokenTypes.literal_string_singleQuote,\n            TSLangTokenTypes.literal_string_doubleQuote,\n            TSLangTokenTypes.semicolon,\n            TSLangTokenTypes.leftParenthesis,\n            TSLangTokenTypes.rightParenthesis,\n            TSLangTokenTypes.leftBrace,\n            TSLangTokenTypes.rightBrace,\n            TSLangTokenTypes.leftBracket,\n            TSL", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/122", "postprocessed": "DependencyExceptions))]\n        public void ShouldThrowDependencyExceptionOnRetrieveStatusDetailByStatusCodeWhenExceptionOccurs(\n            Exception dependancyException)\n        {\n            \n            int someCode = GetRandomNumber();\n\n            var failedStorageException =\n                new FailedStatusDetailStorageException(dependancyException);\n\n            var expectedStatusDetailDependencyException =\n                new StatusDetailDependencyException(failedStorageException);\n\n            this.storageBrokerMock.Setup(broker =>\n                broker.SelectStatusDetailByStatusCode(someCode))\n                .Throws(dependancyException);\n\n            \n            Action retrieveStatusDetailByCodeAction = () =>\n                this.statusDetailService", "exactMatch": false, "editSimilarity": 35.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/146", "postprocessed": "\n            ref float ___fleshDroneCooldown, EnemyIdentifier ___eid, Statue ___stat, float ___maxHealth)\n        {\n            if (__instance.altVersion)\n            {\n                ___inAction = false;\n                GameObject gameObject = GameObject.Instantiate<GameObject>(__instance.insignia, MonoSingleton<PlayerTracker>.Instance.GetPlayer().position, Quaternion.identity);\n                VirtueInsignia virtueInsignia;\n                virtueInsignia = gameObject.GetComponent<VirtueInsignia>();\n                virtueInsignia.virtue = Virtue.Obamapticon;\n                virtue", "exactMatch": false, "editSimilarity": 28.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/134", "postprocessed": "\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 0.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/450", "postprocessed": ")\n        {\n            if (statusDetails == null)\n            {\n                throw new StatusDetailServiceException(\"Status detail storage error occurred, contact support.\");\n            }\n        }\n\n        private static void ValidateStatusCode(int statusCode)\n        {\n            if (statusCode < 100 || statusCode > 599)\n            {\n                throw new InvalidStatusCodeException(statusCode);\n            }\n        }\n    }\n}\n\n\n\n\n", "exactMatch": false, "editSimilarity": 21.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/514", "postprocessed": "\n        readonly IReadOnlyCollection<Package> _packages;\n\n        public RemovalProgressViewModel(IEnumerable<Package> packages, PackageInstallationMode mode)\n        {\n            _packages = packages.ToList();\n            _mode = mode;\n            _status = OperationState.Pending;\n            _progressColor = this.WhenValueChanged(x => x.Status).Select(x => x switch\n            {\n                OperationState.Pending => Brushes.Gray,\n                OperationState.Running => Brushes.DodgerBlue,\n                OperationState.Errored => Brushes.Red,\n                OperationState.Completed => Brushes.Green,\n                OperationState.", "exactMatch": false, "editSimilarity": 8.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/528", "postprocessed": " DataList<T> list, DataList<T> collection)\n        {\n            var dataList = (DataList)(object)(list);\n            var tokens = (DataList)(object)collection;\n            dataList.AddRange(tokens);\n        }\n\n        public static void Insert<T>(this DataList<T> list, int index, T item)\n        {\n            var dataList = (DataList)(object)(list);\n            var token = DataTokenUtil.NewDataToken(item);\n            dataList.Insert(index, token);\n        }\n\n        public static void InsertRange<T>(this DataList<T> list,", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/532", "postprocessed": "IStateStore<TContext>.InitialState => initialState;\n\n        IStackState<TContext> IStateStore<TContext>.Get<TState>()\n        {\n            foreach (var state in states)\n            {\n                if (state is TState target)\n                {\n                    return target;\n                }\n            }\n\n            throw new ArgumentException($\"Not found state: {typeof(TState)}\");\n        }\n    }\n}\n\n\nusing System;\nusing System.Collections.Generic;\n\nnamespace Mochineko.Relent", "exactMatch": false, "editSimilarity": 22.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/707", "postprocessed": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 0.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1144", "postprocessed": "\n        public List<NodeQuest> nodes;\n        public List<NodeQuest> nodeActual;\n        public List<NodeQuest> nodesCompleted;\n        public List<NodeQuest> nodesFailed;\n        public List<NodeQuest> nodesActive;\n        public List<NodeQuest> nodesCompletedAndActive;\n        public List<NodeQuest> nodesFailedAndActive;\n        public List<NodeQuest> nodesCompletedAndFailed;\n        public List<NodeQuest> nodesFailedAndCompleted;\n        public List<NodeQuest> nodesCompletedAndFailedAndActive;\n        public List<NodeQuest> nodesFailedAndCompletedAndActive;\n        public List", "exactMatch": false, "editSimilarity": 7.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1113", "postprocessed": ")\n{\n            \n            ___m_ShockwavePrefab = shockwave.GetComponent<PhysicalShockwave>();\n        }\n    }\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 41.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1160", "postprocessed": " OnEnable()\n        {\n            \n            K_Primary.DispatchState(color_current);\n            \n            \n            \n            ", "exactMatch": false, "editSimilarity": 41.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1225", "postprocessed": "ThrownSword __instance, Collider __0)\n        {\n            if (__0.gameObject.tag == \"Player\")\n            {\n                GameObject explosionObj = GameObject.Instantiate(Plugin.shotgunGrenade.gameObject.GetComponent<Grenade>().explosion, __0.gameObject.transform.position, __0.gameObject.transform.rotation);\n                foreach (Explosion explosion in explosionObj.GetComponentsInChildren<Explosion>())\n                {\n                    explosion.enemy = true;\n                }\n            }\n        }\n    }\n\n", "exactMatch": false, "editSimilarity": 17.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/1353", "postprocessed": "\n            ref float ___explosionTimer, ref float ___explosionTimerMax, ref float ___explosionTimerMin,\n            ref float ___explosionTimerSpeed, ref float ___explosionTimerSpeedMax, ref float ___explosionTimerSpeedMin,\n            ref float ___explosionTimerSpeedMultiplier, ref float ___explosionTimerSpeedMultiplierMax,\n            ref float ___explosionTimerSpeedMultiplierMin, ref float ___explosionTimerSpeedMultiplierMinMulti,\n            ref float ___explosionTimerSpeedMultiplierMaxMulti, ref float ___explosionTimerSpeedMultiplierMinMultiMulti,\n            ref float ___explosionTimerSpeedMultiplierMaxMulti", "exactMatch": false, "editSimilarity": 8.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2112", "postprocessed": "\n        public NameProxy NameProxy { get; set; }\n\n        \n        \n        \n        public IServiceCollection Services { get; set; }\n\n        \n        \n        \n        public HttpMessageHandler Proxy { get; set; }\n\n        \n        \n        \n        public IServiceProvider ProxyServiceProvider { get; set; }\n\n        \n        \n        \n        public IServiceCollection ProxyServices { get; set; }", "exactMatch": false, "editSimilarity": 10.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2495", "postprocessed": "in TKey, out TReturn, in TStorage>\n    {\n        \n        \n        \n        TReturn Dispatch(TKey key);\n    }\n}\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 53.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2799", "postprocessed": " private int _firstColumnWithHeader;\n\n        public IDataTableExtractorSearchConfiguration Header(string header)\n        {\n            if (string.IsNullOrEmpty(header))\n            {\n                throw new ArgumentException($\"{nameof(header)} cannot be null or empty.\");\n            }\n\n            _headerToSearch = new HeaderToSearch\n            {\n                ColumnHeaderName = header,\n            };\n\n            _headersToSearch.Add(_headerToSearch);\n\n            return this;\n        }\n\n        public IDataTableExtractorSearchConfiguration Headers(string[] headers)\n        {\n            if (headers is null)\n            {\n                throw new ArgumentNullException($\"{nameof(headers)} cannot be null.\");\n            }", "exactMatch": false, "editSimilarity": 5.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2877", "postprocessed": "\n            NodeQuestGraph node, Button button)\n        {\n            var b = button.GetComponent<RectTransform>();\n            bool show =!b.visible;\n            b.visible = show;\n\n            foreach (var objective in node.questObjectives)\n            {\n                if (show)\n                {\n                    node.objectivesRef.Add(objective);\n                }\n                else\n                {\n                    node.objectivesRef.Remove(objective);\n                }\n            }\n\n            node.RefreshExpandedState();\n            node.RefreshPorts();\n        }\n    }\n}\n\n", "exactMatch": false, "editSimilarity": 13.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/2949", "postprocessed": "\n\n\n\n\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 0.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3030", "postprocessed": "\n        GameCacheEntry FindGameCache(string cacheId)\n        {\n            return cacheEntries.Values.FirstOrDefault(e => e.Id == cacheId);\n        }\n\n        public void RemoveGameCacheEntry(string cacheId)\n        {\n            if (cacheEntries.Remove(cacheId))\n            {\n                uniqueCacheDirs.Remove(cacheEntries[cacheId].CacheDir);\n            }\n        }\n\n        public GameCacheEntry GetGameCacheEntry(string cacheId)\n        {\n            return cacheEntries.Values.FirstOrDefault(e => e.Id == cacheId);\n        }\n\n        public GameCacheEntry GetGameCacheEntry(string", "exactMatch": false, "editSimilarity": 17.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3297", "postprocessed": "\n        \n        \n        \n        public Kernel Kernel { get; private set; }\n\n        \n        \n        \n        public ScratchBuffer StaticScratch { get; private set; }\n\n        \n        \n        \n        private List<Module> _modules;\n\n        \n        \n        \n        private List<Thread> _threads;\n\n        \n        \n        \n        private Version _version;\n\n        ", "exactMatch": false, "editSimilarity": 9.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3390", "postprocessed": "ArchiveFileAttributes> GetArchives(string archiveFolder)\n        {\n            ObservableCollection<Models.ArchiveFileAttributes> archiveFiles = new ObservableCollection<Models.ArchiveFileAttributes>();\n\n            if (String.IsNullOrWhiteSpace(archiveFolder) == false && Directory.Exists(archiveFolder) == true)\n            {\n                var directory = new DirectoryInfo(archiveFolder);\n                foreach (FileInfo fileInfo in directory.GetFiles().OrderByDescending(p => p.CreationTime))\n                {\n                    archiveFiles.Add(new Models.ArchiveFileAttributes(fileInfo.Name, fileInfo.DirectoryName, fileInfo.LastWriteTime, fileInfo.Length", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3794", "postprocessed": "Task<SKContext> Invoke(this IKernel kernel, Message message)\n        => kernel.RunAsync(message.Variables.ToContext(), message.Pipeline?.Select(_ => kernel.Skills.GetFunction(_.Skill, _.Name))?.ToArray());\n\n        public static async Task<SKContext> Invoke(this IKernel kernel, Message message, ISKFunction function)\n        {\n            var context = message.Variables.ToContext();\n            context.Update(function.Name, function.Invoke(context));\n            return context;\n        }\n\n        public static async Task<SKContext> Invoke(this IKernel kernel, Message message,", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3791", "postprocessed": "\n        public QuestLogSaveData misionLog;\n\n        public QuestLogSaveData data;\n\n        private static QuestManager instance;\n\n        public static QuestManager GetInstance()\n        {\n            if (instance == null) instance = new QuestManager();\n            return instance;\n        }\n\n        private QuestManager()\n        {\n            misionLog = Resources.Load<QuestLog>(QuestConstants.QUEST_LOG_NAME);\n\n            if (misionLog == null)\n            {\n                \n                misionLog = ScriptableObject.CreateInstance<QuestLog>();\n\n                AssetDatabase.CreateAsset(misionLog, QuestConstants.RESOURCES", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "comment", "postprocess": "none", "task_id": "project_cc_csharp/3769", "postprocessed": "\n        public Collider targetHit;\n\n        public bool alreadyHitPlayer = false;\n        public bool alreadyReflected = false;\n\n        private void Awake()\n        {\n            proj = GetComponent<Projectile>();\n            proj.speed = 0;\n            GetComponent<Rigidbody>().isKinematic = true;\n        }\n\n        private void Update()\n        {\n            if (!hasTargetPoint)\n                transform.position += transform.forward * speed;\n            else\n            {\n                if (transform.position!= targetPoint)\n                {\n                    transform.position = Vector3.MoveTowards(transform.position, targetPoint, Time.deltaTime * speed);", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
