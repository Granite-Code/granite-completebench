{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/179", "postprocessed": "TokenType> TokenTypes = new ReadOnlyCollection<TokenType>(new[]\n{\n    TSLangTokenTypes.whitespace,\n    TSLangTokenTypes.comment,\n    TSLangTokenTypes.newline,\n    TSLangTokenTypes.identifier,\n    TSLangTokenTypes.literal_integer,\n    TSLangTokenTypes.literal_string_singleQuote,\n    TSLangTokenTypes.literal_string_doubleQuote,\n    TSLangTokenTypes.semicolon,\n    TSLangTokenTypes.leftParenthesis,\n    TSLangTokenTypes.rightParenthesis,\n    TSLangTokenTypes", "exactMatch": false, "editSimilarity": 21.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/122", "postprocessed": "nameof(GetRandomNumber)), MemberDataSourceType = typeof(GetRandomNumber))]\n        public void RetrieveStatusDetailByCode_Throws_StatusDetailDependencyException_When_StorageBroker_Throws_Exception(int someCode)\n        {\n            \n            int someCode = GetRandomNumber();\n\n            var dependancyException =\n                new Exception(\"Some Exception\");\n\n            var failedStorageException =\n                new FailedStatusDetailStorageException(dependancyException);\n\n            var expectedStatusDetailDependencyException =\n                new StatusDetailDependencyException(failedStorageException);\n\n            this.storageBrokerMock.Setup(broker =>\n                broker.SelectAllStatusDetails", "exactMatch": false, "editSimilarity": 31.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/146", "postprocessed": "ref bool ___inAction2)\n        {\n            if (!__instance.altVersion)\n                return true;\n\n            ___inAction = false;\n            ___inAction2 = false;\n            GameObject gameObject = GameObject.Instantiate<GameObject>(__instance.insignia, MonoSingleton<PlayerTracker>.Instance.GetPlayer().position, Quaternion.identity);\n            Vector3 playerVelocity = MonoSingleton<PlayerTracker>.Instance.GetPlayerVelocity();\n            playerVelocity.y = 0f;\n            if (playerVelocity.magnitude > 0f)\n            {\n                gameObject.transform.LookAt(MonoSingleton<PlayerTracker>.", "exactMatch": false, "editSimilarity": 23.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/134", "postprocessed": "\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Xml;\nusing System.Xml.Linq;\nusing System.Xml.Serialization;\nusing System.IO;\nusing System.Net;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Text.RegularExpressions;\nusing System.Web.Script.Serialization;\nusing", "exactMatch": false, "editSimilarity": 19.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/450", "postprocessed": "\n            StatusDetailRequest request,\n            StatusDetailResponse response,\n            StatusDetail storageStatusDetail,\n            int statusCode)\n        {\n            if (storageStatusDetail.StatusCode != statusCode)\n            {\n                throw new StatusCodeMismatchException(statusCode, storageStatusDetail.StatusCode);\n            }\n\n            if (storageStatusDetail.StatusDetailId != request.StatusDetailId)\n            {\n                throw new StatusDetailIdMismatchException(request.StatusDetailId, storageStatusDetail.StatusDetailId);\n            }\n\n            if (storageStatusDetail.Status != request.Status)\n            {\n                throw new StatusMismatchException(request.Status, storageStatusDetail", "exactMatch": false, "editSimilarity": 14.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/514", "postprocessed": "\n        private int _totalPackages;\n        private bool _isCanceling;\n        private bool _isCanceled;\n        private bool _isCompleted;\n        private bool _isErrored;\n        private bool _isPending;\n        private bool _isRunning;\n\n        public RemovalProgressViewModel(IEnumerable<Package> packages, PackageInstallationMode mode)\n        {\n            _mode = mode;\n            _status = OperationState.Pending;\n            _progressColor = this.WhenValueChanged(x => x.Status).Select(x => x switch\n            {\n                OperationState.Pending => Brushes.Gray,\n                OperationState.Running => Br", "exactMatch": false, "editSimilarity": 8.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/528", "postprocessed": "this DataList<T> list, DataList<T> collection)\n        {\n            var dataList = (DataList)(object)(list);\n            var tokens = (DataList)(object)collection;\n            dataList.AddRange(tokens);\n        }\n    }\n}\n", "exactMatch": false, "editSimilarity": 38.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/532", "postprocessed": "IStateStore<TContext>.Get<TState>()\n        {\n            foreach (var state in states)\n            {\n                if (state is TState target)\n                {\n                    return target;\n                }\n            }\n\n            throw new ArgumentException($\"Not found state: {typeof(TState)}\");\n        }\n\n        public void Dispose()\n        {\n            foreach (var state in states)\n            {\n                state.Dispose();\n            }\n        }\n    }\n}\n", "exactMatch": false, "editSimilarity": 21.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/707", "postprocessed": "\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class MinosPrime : MonoBehaviour\n{\n    public int minosPrime;\n    public int minosPrimeCount;\n    public int minosPrimeCountMax;\n    public int minosPrimeCountMin;\n    public int minosPrimeCountCurrent;\n    public int minosPrimeCountCurrentMax;\n    public int minosPrimeCountCurrentMin;\n    public int minosPrimeCountCurrentDelta;\n    public int minosPrimeCountCurrentDeltaMax;\n    public int minosPrimeCountCurrentDeltaMin;\n   ", "exactMatch": false, "editSimilarity": 13.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1144", "postprocessed": "\n        public NodeQuest lastNode;\n        public List<NodeQuest> nodeObjectives;\n\n        [Header(\"Graph Part\")]\n        public List<NodeLinksGraph> nodeLinkData;\n\n        [System.Serializable]\n        public class NodeLinksGraph\n        {\n            public string baseNodeGUID;\n            public string portName;\n            public string targetNodeGUID;\n        }\n\n        public void Reset()\n        {\n            state = new List<int>();\n            nodeActual = null;\n\n            NodeQuest[] getNodes = Resources.LoadAll<NodeQuest>($\"{QuestConstants.MISIONS_NAME}/{ this.misionName}/Nodes\");\n\n           ", "exactMatch": false, "editSimilarity": 7.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1113", "postprocessed": ")\n{\n            \n            ___m_ShockwavePrefab = shockwave.GetComponent<PhysicalShockwave>();\n        }\n    }\n\n    public class SisyphusInstructionist_Start\n    {\n        static void Postfix(Sisyphus __instance, ref PhysicalShockwave ___m_ShockwavePrefab)\n        {\n            ___m_ShockwavePrefab = shockwave.GetComponent<PhysicalShockwave>();\n        }\n    }\n}\n\n\n\n\n\n\n\n", "exactMatch": false, "editSimilarity": 33.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1160", "postprocessed": " OnEnable()\n        {\n            base.OnEnable();\n            K_Primary.Subscribe(this, OnPrimaryChange);\n        }\n        protected override void OnDisable()\n        {\n            base.OnDisable();\n            K_Primary.Unsubscribe(this, OnPrimaryChange);\n        }\n        private void Start() \n        {\n            \n            K_Primary.DispatchState(color_2); \n        }\n        private void OnPrimaryChange(Color color) \n        {\n            color_current = color;\n            history_colors.Add(color);\n       ", "exactMatch": false, "editSimilarity": 21.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1225", "postprocessed": "ThrownSword __0)\n        {\n            if (__0.exploded)\n                return;\n\n            if (__0.gameObject.tag == \"Player\")\n            {\n                GameObject explosionObj = GameObject.Instantiate(Plugin.shotgunGrenade.gameObject.GetComponent<Grenade>().explosion, __0.gameObject.transform.position, __0.gameObject.transform.rotation);\n                foreach (Explosion explosion in explosionObj.GetComponentsInChildren<Explosion>())\n                {\n                    explosion.enemy = true;\n                }\n            }\n        }\n    }\n\n    class ThrownSword_OnTrigger", "exactMatch": false, "editSimilarity": 14.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/1353", "postprocessed": "ref float ___explosionRadius,\n            ref float ___explosionForce, ref float ___explosionDuration, ref float ___explosionDamage,\n            ref float ___explosionKnockback, ref float ___explosionKnockbackForce, ref float ___explosionKnockbackDuration,\n            ref float ___explosionKnockbackRadius, ref float ___explosionKnockbackForceMultiplier, ref float ___explosionKnockbackDurationMultiplier,\n            ref float ___explosionKnockbackRadiusMultiplier, ref float ___explosionKnockbackForceMultiplierMultiplier,\n            ref float ___explosionKnockbackDurationMultiplierMultiplier", "exactMatch": false, "editSimilarity": 8.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2112", "postprocessed": "\n        public string NameProxy { get; set; }\n\n        \n        \n        \n        [NotNull]\n        public HttpProxy Proxy { get; set; }\n\n        \n        \n        \n        [NotNull]\n        public string Alias { get; set; }\n\n        \n        \n        \n        [NotNull]\n        public TimeSpan Lifetime { get; set; }\n\n        \n        \n        \n        ", "exactMatch": false, "editSimilarity": 11.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2495", "postprocessed": "in TKey, out TReturn, in TStorage> : IStore<TKey, TStorage>\n    {\n        \n        \n        \n        TReturn Dispatch(TKey key);\n    }\n}\n", "exactMatch": false, "editSimilarity": 63.0, "stop": true}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2799", "postprocessed": " private DataTableExtractorWorksheetConfiguration _worksheetConfiguration;\n        private DataTableExtractorSearchConfiguration _searchConfiguration;\n        private DataTableExtractorWorksheetConfiguration _workSheetConfiguration;\n\n        public DataTableExtractor()\n        {\n            _readAllWorksheets = true;\n            _searchLimitRow = 0;\n            _searchLimitColumn = 0;\n        }\n\n        public IDataTableExtractorConfiguration Configure()\n        {\n            return this;\n        }\n\n        public IDataTableExtractorWorkbookConfiguration Workbook(string workbook)\n        {\n            if (string.IsNullOrEmpty(workbook))\n            {\n                throw new ArgumentException($\"{nameof(workbook)} cannot be null or empty.\");\n            }\n\n           ", "exactMatch": false, "editSimilarity": 4.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2877", "postprocessed": "\n            NodeQuestGraph node, Button b)\n        {\n            bool show = !b.visible;\n            b.visible = show;\n\n            foreach (var objective in node.questObjectives)\n            {\n                if (show)\n                {\n                    node.objectivesRef.Add(objective);\n                }\n                else\n                {\n                    node.objectivesRef.Remove(objective);\n                }\n            }\n\n            node.RefreshExpandedState();\n            node.RefreshPorts();\n        }\n\nusing UnityEngine;\nusing UnityEditor;\nusing System.Collections.Generic;\n\nnamespace GraphEditor\n{\n    [CustomEditor(typeof(Node", "exactMatch": false, "editSimilarity": 12.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/2949", "postprocessed": "\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing BenchmarkDotNet.Attributes;\nusing BenchmarkDotNet.Jobs;\nusing BenchmarkDotNet.Running;\nusing Nest;\nusing Nest.Benchmark.Utils;\n\nnamespace Nest.Benchmark\n{\n    [MemoryDiagnoser]\n    public class Benchmark_Nest_UniFlux\n    {\n        private static readonly string _index = \"nest_benchmark\";\n        private static readonly string _type = \"nest_benchmark_type\";\n        private static readonly string _", "exactMatch": false, "editSimilarity": 7.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3030", "postprocessed": "  void RemoveGameCacheEntry(string id)\n        {\n            if (!cacheEntries.ContainsKey(id))\n            {\n                return;\n            }\n            var entry = cacheEntries[id];\n            uniqueCacheDirs.Remove(entry.CacheDir);\n            cacheEntries.Remove(id);\n        }\n\n        public GameCacheEntry GetGameCacheEntry(string id)\n        {\n            if (id == null)\n            {\n                return null;\n            }\n            return cacheEntries.ContainsKey(id) ? cacheEntries[id] : null;\n        }\n\n        public IEnumerable<GameCacheEntry> GetGameCacheEntries(string title, bool only", "exactMatch": false, "editSimilarity": 16.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3297", "postprocessed": "\n            Kernel Kernel { get; private set; }\n\n        public ScratchBuffer StaticScratch { get; private set; }\n\n        \n        \n        \n        \n        public List<Module> GetModules()\n        {\n            if (!_cache.TryGetValue(\"modules\", out var modules))\n            {\n                modules = new List<Module>();\n                foreach (var module in Kernel.Modules)\n                {\n                    modules.Add(module);\n                }\n                _cache[\"modules\"] = modules;\n            }\n            return modules;\n        }\n\n        \n        ", "exactMatch": false, "editSimilarity": 5.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3390", "postprocessed": "ArchiveFileAttributes> GetArchiveFiles(string archiveFolder)\n        {\n            ObservableCollection<Models.ArchiveFileAttributes> archiveFiles = new ObservableCollection<Models.ArchiveFileAttributes>();\n\n            if (String.IsNullOrWhiteSpace(archiveFolder) == false && Directory.Exists(archiveFolder) == true)\n            {\n                var directory = new DirectoryInfo(archiveFolder);\n                foreach (FileInfo fileInfo in directory.GetFiles().OrderByDescending(p => p.CreationTime))\n                {\n                    archiveFiles.Add(new Models.ArchiveFileAttributes(fileInfo.Name, fileInfo.DirectoryName, fileInfo.LastWriteTime, fileInfo.Length", "exactMatch": false, "editSimilarity": 18.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3794", "postprocessed": "Task<SKContext> InvokeAsync(this IKernel kernel, Message message) =>\n            await kernel.RunAsync(message.Variables.ToContext(), message.Pipeline?.Select(_ => kernel.Skills.GetFunction(_.Skill, _.Name)) ?? Array.Empty<ISKFunction>());\n\n        public static async Task<SKContext> InvokeAsync(this IKernel kernel, Message message, string functionName) =>\n            await kernel.RunAsync(message.Variables.ToContext(), kernel.Skills.GetFunction(message.Pipeline?.First(f => f.Name == functionName)?.Skill, functionName));\n\n        public static", "exactMatch": false, "editSimilarity": 20.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3791", "postprocessed": "\n        QuestLogSaveData data;\n\n        private static QuestManager instance;\n\n        public static QuestManager GetInstance()\n        {\n            if (instance == null) instance = new QuestManager();\n            return instance;\n        }\n\n        private QuestManager()\n        {\n            misionLog = Resources.Load<QuestLog>(QuestConstants.QUEST_LOG_NAME);\n\n            if (misionLog == null)\n            {\n                \n                misionLog = ScriptableObject.CreateInstance<QuestLog>();\n\n                AssetDatabase.CreateAsset(misionLog, QuestConstants.RESOURCES_PATH + \"/\" + QuestConstants.QUEST_", "exactMatch": false, "editSimilarity": 6.0, "stop": false}
{"model": "ibm-granite/granite-3.3-8b-instruct", "task": "line_completion_rg1_openai_cosine_sim", "language": "csharp", "template": "no_snippets", "postprocess": "none", "task_id": "project_cc_csharp/3769", "postprocessed": "\n        public Collider targetHit;\n\n        public bool alreadyHit = false;\n\n        private void Awake()\n        {\n            proj = GetComponent<Projectile>();\n            proj.speed = 0;\n            GetComponent<Rigidbody>().isKinematic = true;\n        }\n\n        private void Update()\n        {\n            if (!hasTargetPoint)\n                transform.position += transform.forward * speed;\n            else\n            {\n                if (transform.position != targetPoint)\n                {\n                    transform.position = Vector3.MoveTowards(transform.position, targetPoint, Time.deltaTime * speed);\n                    if (transform.position == targetPoint)", "exactMatch": false, "editSimilarity": 5.0, "stop": false}
